;---------------------  SpeakerPlayer 1.0 beta  ------------------------------
;                                           pROGRAMMING BY aLEXANDER mALTSEV  
;
;  Программа для проигрывания мелодий на PC-Speaker.
;  Ход работы:
;       1)  Чтение ноты из файла, если Eof=0. Иначе-завершение программы
;       2)  Проигрывание ноты
;       3)  переход на пункт 1)                                                             
;  
;   Проигрывание ноты делается так: 
;     1. Вычисляется смещение относительно метки Note слова, которое характеризует
;        ноту, являющуюся "базовой" для требуемой, т. е. эту ноту, но в первой октаве.
;     
;     2. Если необходима нота не в первой октаве, то базовую ноту делим на 2*n, где
;        n - номер нужной октавы минус один.    
;         
;     3. Инициализируем PC-Speaker, включаем звук и посылаем в его порт слово,
;        характеризующее ноту   
;      
;     4. Держим нужную нам длительность с помощью функции Delay
;        (задержка зависит от производительности компьютера, и меняется при изменении
;         нач. значения переменной CyclDelay в процедуре Delay)
;        
;     5. Выключаем звук на PC-Speaker'е.
        
;-----------------------------------------------------------------------------



.model tiny
.386
.stack
.data     
       Note label word         
;-------------Таблица нот из первой октавы-----------------------------------
;  Число, соответствующее ноте, при подаче в порт управления PC-Speaker'a, 
;  производит на свет эту ноту    
       Note0    dw   11592     
       Note1    dw   10942     
       Note2    dw   10330     
       Note3    dw   9790      
       Note4    dw   9204      
       Note5    dw   8688      
       Note6    dw   8200      
       Note7    dw   7740      
       Note8    dw   7306      
       Note9    dw   6896      
       Note10    dw   6510     
       Note11    dw   6144     
       Note12    dw   5799
       Long      dw 0          ; внутренняя переменная
       CyclDelay dd 0          ; переменная, определяющая скорость воспроизведения
       buffer   db 0           ; буфер для считывания символов из файла
       IsFileOpen db 0         ; Флаг, показывающий, открыт ли файл
       FileHandler dw 0        ; Для хранения хэндла файла
       Data label byte         ; Это переменные, в которые сохраняются установки
       ReadNote_Oktava db 0    ; ноты, которая была прочитана
       ReadNote_Ton    db 0    
       ReadNote_Dlit   dw 0
       
       FileName   db 15 dup(0)
       Message db "Please write file name: $", 0ah, 0dh 
       Eof db 0                ; Флаг конца файла
.code   
;--------------------------------------------------------------------------------
;     Процедура задержки. Без параметров
       delay proc
       pusha
             mov CyclDelay, 1200000    ; Устанавливаем время задержки
                                  ; Задержка зависит от производительности компьютера
             cycl_delay:
              
                sub CyclDelay, 1   
                cmp CyclDelay, 0
                jne cycl_delay           
          popa
             ret
       delay endp
       
;---------------------------------------------------------------------------------
; Процедура воспроизведения ноты. Вход:      
; ax-длительность, bh, bl- октава, нота. 1-самая маленькая длительность, 1-самая
;  нижняя октава, 1-нота ля, 2-ля диез и т.д.
;  Если в dh поместить 0, то будет длиться пауза длиной, указанной в ax
       PlayNote proc                           
             pusha
    
    mov Long, ax       ; сохраним длительность
    cmp bh, 0          ; Если нужна пауза...
    je  Pause    
    push bx
            xor ax, ax
            mov al, bl   ; Здесь определяется смещение для Note[], чтобы получить
            mov cl, 2    ; доступ к нужной ноте
            mul cl
            mov bx, ax
            mov ax, word ptr Note[bx]  ; в ax-число, соответствующее ноте из таблицы
  
    pop bx      
;-----------------------------------------------------------------------------
;    теперь если нужно, выберем октаву   
 
            cmp bh, 1     
            je  NoOktava  ; если октаву не надо повышать, то сразу воспроизводим ноту
  
            mov cl, bh    ; иначе разделим число на 2*n, где n-номер октавы.
            dec cl        ; Т. к. частота ноты до второй октавы в два раза больше
                          ; до первой октавы и т. д.
            shr ax, cl
;-----------------------------------------------------------------------------
;  А теперь воспроизведем ноту с нужной длительностью и октавой 
 NoOktava:                        
      push ax
            mov al, 10110110b   ; настройка PC-Speaker'a в микросхеме таймера
            out 43h, al         ; 43h-управляющий регистр

            in al, 61h          ; включаем звук, устанавливая два младших бита порта
            or  al, 00000011b   ; 61h в единицы.
            out 61h, al 
      pop ax
            
            out 42h, al         ; а теперь в порт 42h побайтово посылаем число,
            xchg al, ah         ; соответствующее нужной нам ноте
            out 42h, al    
            
 Pause:                      
     cycl_long:                 ; в этом цикле держим нужную длительность ноты или
            cmp Long, 0         ; паузы. Long-длительность.
            je  NoDelay
            call Delay
            sub Long, 1
       jmp cycl_long  
    
    
  NoDelay: 
            cmp bh, 0           ; если функции указывается нулевая октава
            je  NoChangePort    ; это означает, что надо сделать паузу                          
                                ; т. е. звук был и так выключен, а значит в порт
            in   al, 61h        ; 61h не надо ничего записывать
            xor  al, 11111100b
            not  al             ; меняем два младших бита в 61h на нули, таким
            out 61h, al         ; образом выключая звук
         
    NoChangePort:     
            popa
            ret
       PlayNote endp
;----------------------------------------------------- 
; Окрытие файла с мелодией и чтение из него по ноте с каждым вызовом процедуры    
; Вход: В ax-адрес строки с именем файла
; Выход: В переменные ReadNote_Oktava, ReadNote_Ton, ReadNote_Dlit записываются
; соответственно октава, нота и длительность     
        
       ReadNote proc
            
            pusha
               
              cmp IsFileOpen, 0  ; если вызвали ReadNote в первый раз,
              jne NextNote       ; то откроем файл
              
              mov IsFileOpen, 1  ; Запомним, что файл уже открыт
              mov ax, 3d00h      ; Открыли файл с мелодией
              mov dx, offset FileName
              ;ds уже настроен 
              int 21h
              mov FileHandler, ax ; запомним хэндлер файла для следующих вызовов
              xor si, si          ; ReadNote
              jmp cycl_Read            
     NextNote:         
              mov ax, FileHandler ; Если файл уже был открыт, то восстановим хэндлер
  
  
;-----------------------------------------------------------------------------
;   Основной цикл чтения ноты из файла. 
              xor si, si
     cycl_Read:         
              mov bx, FileHandler   
              mov ah, 3fh
              mov cx, 1
              mov dx, offset buffer     ; Читаем байт
              int 21h
              
              cmp ax, 0                 ; Если вдруг достигли конца файла
              je  jmpEOF                
              jmp next                  ; иначе-продолжаем
 
  jmpEOF:        mov Eof, 1   ; Если мы достигнем конца файла, то установим Eof в 1 и
                           ; выйдем из процедуры
              jmp Exit
              
                     
  next:            
              cmp buffer, ' '     ; пока идут пробелы, ждем след. ноты
              je  cycl_Read
              
 ; Формат записи:  2A#4 нота ля диез с длиной 4 во второй октаве
 ;                 1G2 нота соль с длиной 2 в первой октаве
              
              mov al, buffer       ; Запишем прочитанный символ в al
                                   
                                   ; si-счетчик цикла. Если si=0, то
              cmp si, 0            ; читаем первый символ, и он-номер октавы
              je  Oktava           ; Обрабатываем соответсвующим образом
              
              cmp al, 35     ; Если в ноте есть диез
              je  Diez       
              
              cmp al, 64     ; если в текущий момент прочли тональность
              ja  Ton
              
              
   ; Если никуда не перешли, то мы прочли последний символ,
   ; который обозначает длительность.
              
              sub al, 30h
              mov Data[si], al    ; Запишем длительность в переменную ReadNote_Dlit
              jmp Exit            ; Все, одна нота прочитана. Выходим из процедуры.
              
  Diez:  
              add Data[si-1], 1   ; si увеличивать не надо, т.к. мы просто
                                  ; модифицируем переменную с номером ноты
              jmp cycl_Read
  Ton:     
              
              shl al, 1           ; Переведем букву, обозн. ноту, в число.
              sub al, 130         ; al=buffer*2-130, где 65<=buffer<=71
               
              cmp al, 4           ; Делаем сдвиг на полтона вниз из-за "пустых" полутонов
              jb  NoSdvig         ; ми-фа и ля-си ( где ми# = фа и ля# = си )
              dec al   
                                 ; Например, при чтении буквы F получаем число 10,
              cmp al, 8          ; но тогда ля->0  
              jb  NoSdvig        ;          ля#->1 
              dec al             ;          си->2
                                 ;          си#=до->3
                                 ;          до#->4
                                 ;          ре->5
                                 ;          ре#->6
                                 ;          ми->7
                                 ;          ми#=фа->8 = F  т. е. вместо 10 получаем 8
NoSdvig:                         ;  все это получается из-за пустых полутонов ми-фа
                                 ; и ля-си
              mov Data[si], al   ; записываем нужную ноту в переменную ReadNote_Ton
              inc si
              jmp cycl_Read 
   
   
  Oktava:                 
            cmp al, 'P'          ; проверяем, может прочли паузу?
            jne NoPause
            mov ReadNote_Oktava, 0 ; если да, то запишем в октаву ноль, чтобы потом
            inc si                 ; функция PlayNote сделал паузу
            inc si
            jmp cycl_Read
    NoPause:                       ; иначе-просто преобразуем букву в число и 
            sub al, 30h            ; записываем его в ReadNote_Oktava
            mov Data[si], al
            inc si
          jmp cycl_Read
;-------------------------------------------------------       
       
 Exit:      
            popa    
            ret
       ReadNote endp
;-----------------------------------------------------       
;   Закрывает файл, открытый для чтения ReadNote и сбрасывает флаг Eof
CloseNoteFile proc
            
            push ax
            push bx
            mov ah, 3eh
            mov bx, FileHandler
            int 21h 
            pop bx
            pop ax
            
            mov Eof, 0
            ret
            
CloseNoteFile endp   
;-------------------------------------------------------------------------------
;   Очень простая функция-вводит с экрана строку и записывает ее в FileName[],
;  чтобы потом открыть необходимый файл с мелодией
ReadString proc
       pusha          
        xor bx, bx
         cycl_ReadString:
                mov ah, 01h
                int 21h
                cmp al, 13           ; Читаем буковки, пока не нажмем Enter
                je NoRead
                
                mov FileName[bx], al ; Записываем в буфер
                inc bx 
                jmp cycl_ReadString
                
      NoRead:          
                mov FileName[bx], '$'
            
       popa
       ret     
ReadString endp
;-------------------------------------------------------------------------------
       start:
            mov ax, @data
            mov ds, ax
 
            mov ah, 09h       ; Выводим приглашение на ввод имени файла мелодии.
            mov dx, offset Message
            int 21h
            
            call ReadString           ; читаем его имя
            mov  ax, offset FileName 
          
          ; Открываем...
   cycl_PlayNext:
            call ReadNote           ; ...а потом читаем по ноте...
            mov bh, ReadNote_Oktava
            mov bl, ReadNote_Ton
            inc bl
            mov ax, ReadNote_Dlit
            cmp Eof, 1              ; ...пока файл не закончится
            je ExitProc
            call PlayNote           ; Играем ноту.
       jmp cycl_PlayNext            ; Следующая...
                           
            call CloseNoteFile      ; Если файл проигран, закрываем его
    
   ExitProc:         
            
           mov ax, 4c00h            ; Выходим в DOS
           int 21h
        
       end start